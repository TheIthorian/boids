"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkboids"] = self["webpackChunkboids"] || []).push([["node_modules_three_examples_jsm_capabilities_WebGL_js"],{

/***/ "./node_modules/three/examples/jsm/capabilities/WebGL.js":
/*!***************************************************************!*\
  !*** ./node_modules/three/examples/jsm/capabilities/WebGL.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass WebGL {\n\n\tstatic isWebGLAvailable() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic isWebGL2Available() {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\treturn !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic isColorSpaceAvailable( colorSpace ) {\n\n\t\ttry {\n\n\t\t\tconst canvas = document.createElement( 'canvas' );\n\t\t\tconst ctx = window.WebGL2RenderingContext && canvas.getContext( 'webgl2' );\n\t\t\tctx.drawingBufferColorSpace = colorSpace;\n\t\t\treturn ctx.drawingBufferColorSpace === colorSpace; // deepscan-disable-line SAME_OPERAND_VALUE\n\n\t\t} catch ( e ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\tstatic getWebGLErrorMessage() {\n\n\t\treturn this.getErrorMessage( 1 );\n\n\t}\n\n\tstatic getWebGL2ErrorMessage() {\n\n\t\treturn this.getErrorMessage( 2 );\n\n\t}\n\n\tstatic getErrorMessage( version ) {\n\n\t\tconst names = {\n\t\t\t1: 'WebGL',\n\t\t\t2: 'WebGL 2'\n\t\t};\n\n\t\tconst contexts = {\n\t\t\t1: window.WebGLRenderingContext,\n\t\t\t2: window.WebGL2RenderingContext\n\t\t};\n\n\t\tlet message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\n\n\t\tconst element = document.createElement( 'div' );\n\t\telement.id = 'webglmessage';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( contexts[ version ] ) {\n\n\t\t\tmessage = message.replace( '$0', 'graphics card' );\n\n\t\t} else {\n\n\t\t\tmessage = message.replace( '$0', 'browser' );\n\n\t\t}\n\n\t\tmessage = message.replace( '$1', names[ version ] );\n\n\t\telement.innerHTML = message;\n\n\t\treturn element;\n\n\t}\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebGL);\n\n\n//# sourceURL=webpack://boids/./node_modules/three/examples/jsm/capabilities/WebGL.js?");

/***/ })

}]);